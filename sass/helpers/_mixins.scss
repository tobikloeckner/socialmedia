// ----- ADD REM VALUE ----- //
@mixin rem($property, $values, $main-font-size: 16) {
  $px-values: ();
  $rem-values: ();

  @each $value in $values {
    @if $value == 0 or type_of($value) != number {
      $px-values: append($px-values, $value);
      $rem-values: append($rem-values, $value);

    } @else {
      $px-values: append($px-values,#{$value}px);
      $rem-values: append($rem-values,($value/$main-font-size)+rem);
    }
  }

  #{$property}: #{$px-values};
  #{$property}: #{$rem-values};
}


// ---- OPACITY WITH IE8 FALLBACK ---- //
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}



// ----- BACKGROUND LINEAR-GRADIENT ---- /
@mixin linear-gradient($fromColor, $toColor) {
  background-color: $toColor; /* Fallback Color */
  background-image: -webkit-gradient(linear, left top, left bottom, from($fromColor), to($toColor)); /* Saf4+, Chrome */
  background-image: -webkit-linear-gradient(top, $fromColor, $toColor); /* Chrome 10+, Saf5.1+, iOS 5+ */
  background-image:    -moz-linear-gradient(top, $fromColor, $toColor); /* FF3.6 */
  background-image:     -ms-linear-gradient(top, $fromColor, $toColor); /* IE10 */
  background-image:      -o-linear-gradient(top, $fromColor, $toColor); /* Opera 11.10+ */
  background-image:         linear-gradient(top, $fromColor, $toColor);
  filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0,StartColorStr='#{$fromColor}', EndColorStr='#{$toColor}');
}



// ----- RETINA IMAGE ---- /
@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
  (-o-min-device-pixel-ratio: 2.6/2),
  (-webkit-min-device-pixel-ratio: 1.3),
  (min-device-pixel-ratio: 1.3),
  (min-resolution: 1.3dppx) {
    background-image: url($image);
    background-size: $width $height;
  }
}



// ----- Transition ---- /
@mixin transition($property, $duration, $timing) {
  -webkit-transition: $property $duration $timing;
  -moz-transition: $property $duration $timing;
  -o-transition: $property $duration $timing;
  transition: $property $duration $timing;
}



// ----- Rotation ---- /
@mixin rotate($deg){
  -webkit-transform: rotate($deg);
  -moz-transform: rotate($deg);
  -ms-transform: rotate($deg);
  -o-transform: rotate($deg);
  transform: rotate($deg);
//filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);
}